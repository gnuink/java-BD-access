
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author samantha camila
 */
public class Entrdas extends javax.swing.JFrame {

    ConectarBD Con = new ConectarBD();
    static Connection conect;

    public Entrdas() {
        initComponents();
        setSize(400,380);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btni = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnvolver = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        jLabel1.setText("MOVIMIENTOS DE ENTRADA");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 10, 251, 57);

        btni.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        btni.setText("PRESIONE AQUI");
        btni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btniActionPerformed(evt);
            }
        });
        getContentPane().add(btni);
        btni.setBounds(130, 120, 120, 23);

        jButton1.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        jButton1.setText("PRESIONE AQUI ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(130, 180, 120, 23);

        jButton2.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        jButton2.setText("PRESIONE AQUI");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(130, 250, 120, 23);

        btnvolver.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        btnvolver.setText("VOLVER");
        btnvolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnvolver);
        btnvolver.setBounds(140, 300, 100, 23);

        jLabel3.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel3.setText("Cantidad de Movimientos Entrada por Bodega");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(70, 90, 260, 15);

        jLabel2.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel2.setText("Cantidad de Productos por Bodega ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(90, 150, 200, 15);

        jLabel4.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel4.setText("Precio de cada Producto en Movimientos de Entrada por bodega");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 220, 360, 20);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoMenu.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 400, 360);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btniActionPerformed
        Document documento = new Document();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/i.Informar la cantidad total de movimientos de entrada del día por bodega..pdf"));// donde y como se llama el PDF
            documento.open();

            PdfPTable tabla = new PdfPTable(2);
            tabla.addCell("Cantidad de total de entrada");
            tabla.addCell("nombre de la bodega");
            try {
                conect = Con.Conexion();
                PreparedStatement pst = conect.prepareStatement("SELECT Count(Movimientos.Tipomov) AS CuentaDeTipomov, Bodega.Nombre\n"
                        + "FROM Bodega INNER JOIN ((Producto INNER JOIN Movimientos ON Producto.Codprod = Movimientos.Codprod) INNER JOIN Prodxbod ON Producto.Codprod = Prodxbod.Codprod) ON (Movimientos.Codbod = Bodega.Codbod) AND (Bodega.Codbod = Prodxbod.Codbod)\n"
                        + "WHERE (((Movimientos.Tipomov)=\"ENTRADA\"))\n"
                        + "GROUP BY Bodega.Nombre;");
                ResultSet rs = pst.executeQuery();
                documento.add(new Paragraph("°Informar la cantidad total de movimientos de entrada del día por bodega."));
                documento.add(new Paragraph(" "));
                if (rs.next()) {

                    do {
                        tabla.addCell(rs.getString(1));
                        tabla.addCell(rs.getString(2));

                    } while (rs.next());
                    documento.add(tabla);
                }

            } catch (DocumentException | SQLException e) {
            }
            documento.close();
            JOptionPane.showMessageDialog(null, " El reporte se ha creado en el Desktop");
            documento.open();
        } catch (DocumentException | HeadlessException | FileNotFoundException e) {

        }

    }//GEN-LAST:event_btniActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Document documento = new Document();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/ii. la cantidad total de unidades ingresadas de cada producto por bodega en el día..pdf"));// donde y como se llama el PDF
            documento.open();

            PdfPTable tabla = new PdfPTable(3);
            tabla.addCell("SUMA total de la cantidad (ingresadas)");
            tabla.addCell("codigo del producto");
            tabla.addCell("nombre de la bodega");
            try {
                conect = Con.Conexion();
                PreparedStatement pst = conect.prepareStatement("SELECT Sum(Movimientos.Cantidad) AS SumaDeCantidad, Producto.Codprod, Bodega.Nombre\n"
                        + "FROM Bodega INNER JOIN ((Producto INNER JOIN Movimientos ON Producto.Codprod = Movimientos.Codprod) INNER JOIN Prodxbod ON Producto.Codprod = Prodxbod.Codprod) ON (Movimientos.Codbod = Bodega.Codbod) AND (Bodega.Codbod = Prodxbod.Codbod)\n"
                        + "WHERE (((Movimientos.Tipomov)=\"ENTRADA\"))\n"
                        + "GROUP BY Producto.Codprod, Bodega.Nombre;");
                ResultSet rs = pst.executeQuery();
                documento.add(new Paragraph("°la cantidad total de unidades ingresadas de cada producto por bodega en el día."));
                documento.add(new Paragraph(" "));
                if (rs.next()) {

                    do {
                        tabla.addCell(rs.getString(1));
                        tabla.addCell(rs.getString(2));
                        tabla.addCell(rs.getString(3));
                    } while (rs.next());
                    documento.add(tabla);
                }

            } catch (DocumentException | SQLException e) {
            }
            documento.close();
            JOptionPane.showMessageDialog(null, " El reporte se ha creado en el Desktop");
            documento.open();
        } catch (DocumentException | HeadlessException | FileNotFoundException e) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Document documento = new Document();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/iii. el monto equivalente a los movimientos de entrada de cada producto por bodega .pdf"));// donde y como se llama el PDF
            documento.open();

            PdfPTable tabla = new PdfPTable(5);
            tabla.addCell("Cantidad");
            tabla.addCell("Precio");
            tabla.addCell("Total a pagar ");
            tabla.addCell("Codigo del Producto ");
            tabla.addCell("Nombre de la bodega");
            try {
                conect = Con.Conexion();
                PreparedStatement pst = conect.prepareStatement("SELECT Movimientos.Cantidad, Producto.Precio, [Cantidad]*[Precio] AS [Precio total], Producto.Codprod, Bodega.Nombre\n"
                        + "FROM (Producto INNER JOIN (Bodega INNER JOIN Prodxbod ON Bodega.Codbod = Prodxbod.Codbod) ON Producto.Codprod = Prodxbod.Codprod) INNER JOIN Movimientos ON (Bodega.Codbod = Movimientos.Codbod) AND (Producto.Codprod = Movimientos.Codprod)\n"
                        + "WHERE (((Movimientos.Tipomov)=\"ENTRADA\"));");
                ResultSet rs = pst.executeQuery();
                documento.add(new Paragraph("°El monto equivalente a los movimientos de entrada de cada producto por bodega "));
                documento.add(new Paragraph(" "));
                if (rs.next()) {

                    do {
                        tabla.addCell(rs.getString(1));
                        tabla.addCell(rs.getString(2));
                        tabla.addCell(rs.getString(3));
                        tabla.addCell(rs.getString(4));
                        tabla.addCell(rs.getString(5));
                    } while (rs.next());
                    documento.add(tabla);
                }

            } catch (DocumentException | SQLException e) {
            }
            documento.close();
            JOptionPane.showMessageDialog(null, " El reporte se ha creado en el Desktop");
            documento.open();
        } catch (DocumentException | HeadlessException | FileNotFoundException e) {

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnvolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvolverActionPerformed
        dispose();
    }//GEN-LAST:event_btnvolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entrdas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entrdas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entrdas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entrdas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entrdas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btni;
    private javax.swing.JButton btnvolver;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
